[{"name":"app.R","content":"#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\nlibrary(gggenomes)\n\ndata(package=\"gggenomes\")\n\nggg <- gggenomes(\n  genes = emale_genes, seqs = emale_seqs, links = emale_ava,\n  feats = list(emale_tirs, ngaros=emale_ngaros, gc=emale_gc))\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"gggenomes Shiny demo\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"geneSize\",\n                        \"Size of genes:\",\n                        min = 1,\n                        max = 5,\n                        value = 2),\n            checkboxInput(\"showLinks\", \"Show links\"),\n            #checkboxInput(\"showGC\", \"Show GC content\"),\n            checkboxInput(\"showGeneLabels\", \"Show gene labels\"),\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput(\"gggPlot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output) {\n\n    output$gggPlot <- renderPlot({\n      p <- ggg |> \n        add_sublinks(emale_prot_ava) |>\n        sync() + # synchronize genome directions based on links\n        geom_feat(position=\"identity\", size=6) +\n        geom_seq()\n      if(input$showLinks){\n        p <- p + geom_link(data=links(2))\n      }\n      p <- p + geom_bin_label() +\n        geom_gene(aes(fill=name), size=input$geneSize)\n      if(input$showGeneLabels){\n        p <- p + geom_gene_tag(aes(label=name), nudge_y=0.1, check_overlap = TRUE)\n      }\n      p <- p + geom_feat(data=feats(ngaros), alpha=.3, size=10, position=\"identity\") +\n        geom_feat_note(aes(label=\"Ngaro-transposon\"), data=feats(ngaros),\n                       nudge_y=.1, vjust=0)\n      if(FALSE){#input$showGC){\n        p <- p + \n          geom_wiggle(aes(z=score, linetype=\"GC-content\"), feats(gc),\n                     fill=\"lavenderblush4\", position=position_nudge(y=-.2), height = .2)\n      }\n      p <- p +  \n        scale_fill_brewer(\"Genes\", palette=\"Dark2\", na.value=\"cornsilk3\")\n      p\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"LICENSE.md","content":"# MIT License\n\nCopyright (c) 2024 shiny-gggenomes authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","type":"text"},{"name":"README.md","content":"# Shiny(live) demo for gggenomes\n\nA basic example how to use [`gggenomes`](https://thackl.github.io/gggenomes/)\ninteractively with [`shiny`](https://shiny.posit.co/) or\n[`shinylive`](https://posit-dev.github.io/r-shinylive/).\n\nThis is an experiment to demonstrate how `gggenomes` can be used interactively,\nhowever performance (particularly for `shinylive`) is not ideal in this example.\n\n## Shinylive\n\nVisit [the website]().\n\nIf you make changes locally, you can re-export via\n\n```R\nshinylive::export(\".\", \"site\")\n```\n\n## Shiny\n\nRun locally via\n\n```R\nshiny::runApp()\n```\n\n","type":"text"},{"name":"shiny-gggenomes.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
